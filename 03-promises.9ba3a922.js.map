{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,UAAWC,SAASC,cAAc,uBAClCC,UAAWF,SAASC,cAAc,sBAClCE,MAAOH,SAASC,cAAc,wBAC9BG,SAAUJ,SAASC,cAAc,WAEnC,IAAII,EAAW,GAEf,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAEpCH,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,OAiCzBV,EAAKM,SAASU,iBAAiB,SA5B/B,SAAoBC,GAClBA,EAAMC,iBACN,MAAMC,EAAoBC,OAAOpB,EAAKK,MAAMgB,OACtCC,EAAYF,OAAOpB,EAAKC,UAAUoB,OAClCE,EAAOH,OAAOpB,EAAKI,UAAUiB,OACnC,IAAIG,EAAQF,EACZ,IAAK,IAAIG,EAAQ,EAAGA,EAAQN,EAAoB,EAAGM,GAAS,EAAG,CAC7D,MAAMC,EAAalB,EAAciB,EAAOD,GACxCA,GAAgBD,EAChBhB,EAASoB,KAAKD,GAEhBE,YAAW,KACTrB,EAASsB,SAAQC,IACfA,EAAEC,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,KAClBsB,EAAAlC,GAASmC,OAAOC,QACd,uBAAqBzB,QAAiBC,SACrCyB,OAEF,EAAO1B,WAAUC,WAChBsB,EAAAlC,GAAQmC,OAACG,QAAO,sBACb3B,QAA8BC,SAAc2B,SAGhDC,GAAQ/B,EAAM,UAElBe","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  mianDelay: document.querySelector('input[name=\"delay\"]'),\n  delayStep: document.querySelector('input[name=\"step\"]'),\n  count: document.querySelector('input[name=\"amount\"]'),\n  startBtn: document.querySelector('button'),\n};\nlet promises = [];\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n\nfunction onSubmited(event) {\n  event.preventDefault();\n  const countOfIterations = Number(refs.count.value);\n  const mainDelay = Number(refs.mianDelay.value);\n  const step = Number(refs.delayStep.value);\n  let delay = mainDelay;\n  for (let index = 1; index < countOfIterations + 1; index += 1) {\n    const newPromise = createPromise(index, delay);\n    delay = delay + step;\n    promises.push(newPromise);\n  }\n  setTimeout(() => {\n    promises.forEach(p => {\n      p.then(({ position, delay }) =>\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        )\n      )\n        .catch(({ position, delay }) =>\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          )\n        )\n        .finally(x => (promises = []));\n    });\n  }, mainDelay);\n}\n\nrefs.startBtn.addEventListener('click', onSubmited);\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","mianDelay","document","querySelector","delayStep","count","startBtn","$47d4ff9957288465$var$promises","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","Math","random","addEventListener","event","preventDefault","countOfIterations","Number","value","mainDelay","step","delay1","index","newPromise","push","setTimeout","forEach","p","then","$parcel$interopDefault","Notify","success","catch","failure","finally","x"],"version":3,"file":"03-promises.9ba3a922.js.map"}